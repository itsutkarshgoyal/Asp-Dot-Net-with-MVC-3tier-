
@model BookReadingEventViewModel.EventDetailViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Login_Layout.cshtml";
    //Html.EnableClientValidation(true);
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h5 style="color:red">@ViewBag.Message</h5>
    <br>
    <div class="form-horizontal">
        <h4>EventDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (Model.start_time != null && Model.start_time >= DateTime.Now)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.start_time, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.start_time, new { htmlAttributes = new { @class = "form-control", @id ="datetimepicker " } })*@
                    <input type="text" id="datetimepicker" name="start_time" value=@Model.start_time class="form-control" />
                </div>
            </div>
        }



        <div class="form-group">
            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.other_details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.other_details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.other_details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            
            <div class="col-md-10">
                @Html.HiddenFor(model => model.invitation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.invitation, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Event_id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.created_by, new { htmlAttributes = new { @class = "form-control" } })
                @if (Model.start_time <= DateTime.Now)
                {@Html.HiddenFor(model => model.start_time, new { htmlAttributes = new { @class = "form-control" } });
            }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
<link rel="stylesheet" type="text/css" href="~/Content/themes/base/jquery.datetimepicker.min.css" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.validate.min.js")
    @Scripts.Render("~/Scripts/jquery.validate.unobtrusive.min.js")
    @Scripts.Render("~/Scripts/jquery.datetimepicker.full.js")
    @*@Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/cssjqryUi")*@
<script>
    $('#datetimepicker').datetimepicker({
        inline: false,




    });

</script>


}
